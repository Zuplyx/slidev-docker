name: Create docker image for slidev release
on:
  schedule:
    - cron: '0 10 * * *'
  workflow_dispatch:  # Allows manual triggering
jobs:
  get-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Ensure we have write permissions to create the release
    outputs:
      release_created: ${{ steps.check_release.outputs.release_created }}
      slidev_version: ${{ steps.fetch_version.outputs.slidev_version }}
    steps:
      - name: Fetch release version
        id: fetch_version
        run: |
          slidev_version=$(curl -sL https://api.github.com/repos/slidevjs/slidev/releases/latest | jq -r ".tag_name")
          echo "slidev_version=${slidev_version}" >> $GITHUB_ENV
          echo "slidev_version=${slidev_version}" >> $GITHUB_OUTPUT

      - name: Check for existing release
        id: check_release
        run: |
          if gh release view "${{ steps.fetch_version.outputs.slidev_version }}" > /dev/null 2>&1; then
            echo "release_created=false" >> $GITHUB_OUTPUT
          else
            echo "release_created=true" >> $GITHUB_OUTPUT
          fi

      - name: Create release
        if: steps.check_release.outputs.release_created == 'true'
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.fetch_version.outputs.slidev_version }}
          name: Release ${{ steps.fetch_version.outputs.slidev_version }}
          body: |
            This release corresponds to the upstream [slidev release ${{ steps.fetch_version.outputs.slidev_version }}](https://github.com/slidevjs/slidev/releases/tag/${{ steps.fetch_version.outputs.slidev_version }}).
          draft: false
          prerelease: false

  push_to_registries:
    name: Push Docker image to multiple registries
    runs-on: ubuntu-latest
    needs: get-version  # Ensure this job only runs after the get-version job
    if: needs.get-version.outputs.release_created == 'true'  # Run this job only if a new release was created
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            zuplyx/slidev
            ghcr.io/${{ github.repository }}
          tags: |
            ${{ needs.get-version.outputs.slidev_version }}
          labels: |
            org.opencontainers.image.version=${{ needs.get-version.outputs.slidev_version }}

      - name: Build and push Docker images
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: slidev.DOCKERFILE
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true